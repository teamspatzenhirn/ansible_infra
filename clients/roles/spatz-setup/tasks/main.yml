# instead of xrandr because of Wayland
- name: "clone gnome-randr"
  become: true
  become_user: spatz
  git:
    repo: "https://gitlab.com/Oschowa/gnome-randr.git"
    dest: /spatz/gnome-randr
    version: master
    update: yes
  register: gnome_randr

# that display rotation works...
- name: login to spatz user and press Enter!
  ansible.builtin.pause:
  when: gnome_randr.changed or force_all

- name: "rotate display"
  become: true
  become_user: spatz
  shell:
    cmd: |
      export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$UID/bus
      python3 /spatz/gnome-randr/gnome-randr.py --output HDMI-1 --rotate right --persistent
    executable: /bin/bash
  when: gnome_randr.changed or force_all

# that display rotation works...
- name: click on Keep Changes (fast!) on display and press Enter!
  ansible.builtin.pause:
  when: gnome_randr.changed or force_all

- name: "create .ssh dir"
  become: true
  file:
    path: /spatz/.ssh
    owner: spatz
    state: directory

- name: "copy SSH private key"
  become: true
  copy:
    src: spatz
    dest: /spatz/.ssh/id_rsa
    mode: 0600
    owner: spatz
  register: key

- name: "copy SSH public key"
  become: true
  copy:
    src: spatz.pub
    dest: /spatz/.ssh/id_rsa.pub
    owner: spatz

- name: "disable screen lock"
  become: true
  become_user: spatz
  shell:
    cmd: |
      export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$UID/bus
      gsettings set org.gnome.desktop.screensaver lock-enabled false
    executable: /bin/bash
  when: key.changed or force_all

- name: "configure auto login"
  become: true
  lineinfile:
    dest: /etc/gdm3/custom.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: 'AutomaticLoginEnable\s*=', line: 'AutomaticLoginEnable = True' }
    - { regexp: 'AutomaticLogin\s*=', line: 'AutomaticLogin = spatz' }
  when: key.changed or force_all
   
# mostly this ensures that docker 
# group membership is re-evaluated 
# before docker login
# and that the coral works
- name: "reboot if initial setup"
  become: true
  reboot:
  when: key.changed or force_all

- name: "docker login"
  become: true
  become_user: spatz
  community.docker.docker_login:
    username: spatz
    password: "{{ lookup('file', 'gitlab-token') }}"
    registry_url: git.spatz.wtf:5050

- name: "configure git user.name for spatz"
  become: true
  become_user: spatz
  community.general.git_config:
    name: user.name
    value: "spatz"
    scope: global

- name: "configure git user.email for spatz"
  become: true
  become_user: spatz
  community.general.git_config:
    name: user.email
    value: "team-spatzenhirn@uni-ulm.de"
    scope: global

- name: "create ade-home directory"
  become: true
  become_user: spatz
  file:
    path: /spatz/ade-home
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: "create .adehome"
  become: true
  become_user: spatz
  copy:
    content: ""
    dest: /spatz/ade-home/.adehome
    mode: u=rwx,g=rx,o=rx

- name: "clone 2021 git repo"
  become: true
  become_user: spatz
  git:
    repo: "git@git.spatz.wtf:spatzenhirn/2021.git"
    dest: /spatz/ade-home/2021
    accept_newhostkey: true
    version: develop
    update: no