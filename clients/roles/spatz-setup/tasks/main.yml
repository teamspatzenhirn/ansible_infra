- name: "copy tty udev rules for spatzX IO-Board"
  become: true
  copy:
    src: 99-spatzX.rules
    dest: /etc/udev/rules.d/99-spatzX.rules

- name: "copy monitors.xml for rotated hdmi monitor on spatz"
  become: true
  copy:
    src: monitors.xml
    dest: /spatz/.config/monitors.xml
    owner: spatz

- name: "create .ssh dir"
  become: true
  file:
    path: /spatz/.ssh
    owner: spatz
    state: directory

- name: "copy SSH private key"
  become: true
  copy:
    src: spatz
    dest: /spatz/.ssh/id_rsa
    mode: 0600
    owner: spatz
  register: key

- name: "copy SSH public key"
  become: true
  copy:
    src: spatz.pub
    dest: /spatz/.ssh/id_rsa.pub
    owner: spatz

- name: "get tmp dbus sessions"
  find:
    paths: /tmp
    patterns: "dbus-*"
    file_type: any
    recurse: no
  register: dbus
  when: key.changed or force_all

- name: "disable lock screen"
  become: true
  become_user: spatz
  shell: 
    cmd: |
      export DBUS_SESSION_BUS_ADDRESS=unix:path={{item.path}}
      gsettings set org.gnome.desktop.screensaver lock-enabled false
    executable: /bin/bash
  with_items: "{{ dbus.files|selectattr('pw_name', 'equalto', 'spatz')|list + [ {'path': '/run/user/$UID/bus'} ] }}"
  loop_control:
    label: "{{ item.path }}"
  when: key.changed or force_all

- name: "configure auto login"
  become: true
  lineinfile:
    dest: /etc/gdm3/custom.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: 'AutomaticLoginEnable\s*=', line: 'AutomaticLoginEnable = True' }
    - { regexp: 'AutomaticLogin\s*=', line: 'AutomaticLogin = spatz' }
  when: key.changed or force_all
   
# mostly this ensures that docker 
# group membership is re-evaluated 
# before docker login
# and that the coral works
# and that display is rotated
- name: "reboot if initial setup"
  become: true
  reboot:
  when: key.changed or force_all

- name: "docker login"
  become: true
  become_user: spatz
  community.docker.docker_login:
    username: spatz
    password: "{{ lookup('file', 'gitlab-token') }}"
    registry_url: git.spatz.wtf:5050

- name: "configure git user.name for spatz"
  become: true
  become_user: spatz
  community.general.git_config:
    name: user.name
    value: "spatz"
    scope: global

- name: "configure git user.email for spatz"
  become: true
  become_user: spatz
  community.general.git_config:
    name: user.email
    value: "team-spatzenhirn@uni-ulm.de"
    scope: global

- name: "create ade-home directory"
  become: true
  become_user: spatz
  file:
    path: /spatz/ade-home
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: "create .adehome"
  become: true
  become_user: spatz
  copy:
    content: ""
    dest: /spatz/ade-home/.adehome
    mode: u=rwx,g=rx,o=rx

- name: "clone 2021 git repo"
  become: true
  become_user: spatz
  git:
    repo: "git@git.spatz.wtf:spatzenhirn/2021.git"
    dest: /spatz/ade-home/2021
    accept_newhostkey: true
    version: develop
    update: no